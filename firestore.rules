
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }
    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }
    function isTrainer() {
      return isSignedIn() && getRole(request.auth.uid) == 'trainer';
    }
    function isOwner(userId) {
        return request.auth.uid == userId;
    }
    function isStudent() {
      return isSignedIn() && getRole(request.auth.uid) == 'student';
    }

    // USER COLLECTIONS
    match /users/{userId} {
      // Anyone can create a user during signup
      allow create: if true;
      // Trainers can read their students' profiles, and users can read their own profile.
      allow read, update: if isSignedIn() && (isOwner(userId) || (isTrainer() && get(/databases/$(database)/documents/users/$(userId)).data.assignedTrainerId == request.auth.uid));
      
      // Trainers can list their assigned students
      allow list: if isTrainer();

      match /private_details/{docId} {
        allow read, write: if isOwner(userId);
      }
      match /credit_transactions/{transactionId} {
        // Students can have transactions created for them. Trainers can make adjustments.
        allow create: if isSignedIn();
        // Users can read their own transactions. Trainers can read their students' transactions.
        allow read: if isOwner(userId) || (isTrainer() && get(/databases/$(database)/documents/users/$(userId)).data.assignedTrainerId == request.auth.uid);
        allow list: if isOwner(userId);
      }
    }
    
    // COLLECTION GROUP for sales dashboard
    match /{path=**}/credit_transactions/{transactionId} {
      allow read: if isTrainer() && resource.data.trainerId == request.auth.uid;
    }

    // TESTS COLLECTION
    match /tests/{testId} {
      // Any signed-in user can read tests
      allow read: if isSignedIn();
      // Only trainers can manage tests
      allow create, update, delete: if isTrainer();
    }
    
    // SUBMISSIONS COLLECTION
    match /submissions/{submissionId} {
      // Students can create submissions
      allow create: if isStudent();
      // Users can read/update their own submissions. Trainers can read/update their students' submissions.
      allow read, update: if isSignedIn() && (isOwner(resource.data.studentId) || (isTrainer() && resource.data.trainerId == request.auth.uid));
      // Trainers can list their students' submissions
      allow list: if isTrainer();
      
      match /feedback_thread/{messageId} {
        allow read, create: if isSignedIn() && (isOwner(get(/databases/$(database)/documents/submissions/$(submissionId)).data.studentId) || get(/databases/$(database)/documents/submissions/$(submissionId)).data.trainerId == request.auth.uid);
        allow update, delete: if false;
      }
    }
    
    // OTHER COLLECTIONS
    match /plans/{planId} {
      // Any signed-in user can read plans
      allow read: if isSignedIn();
      // Only trainers can manage plans
      allow create, update, delete: if isTrainer();
    }
    match /notifications/{notificationId} {
      allow create: if isSignedIn();
      allow read, delete: if isSignedIn() && resource.data.recipientId == request.auth.uid;
      allow list: if isSignedIn() && request.query.where[0][0] == 'recipientId' && request.query.where[0][2] == request.auth.uid;
    }
    match /email_queue/{emailId} {
      allow create: if isSignedIn();
      allow read, write, delete: if false;
    }
  }
}
